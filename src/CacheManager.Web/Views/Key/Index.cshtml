@{
    ViewData["Title"] = "缓存项管理";
}
@section Css
    {
    <link href="~/lib/bootstrap-treeview-1.2.0/bootstrap-treeview.min.css" rel="stylesheet" type="text/css" />
}
<div id="content">
    <br />
    <div class="row">
        <div class="col-sm-4">
            <!-- <form> -->
            <div class="form-group">
                <label for="input-search" class="sr-only">Search Tree:</label>
                <input type="text" class="form-control" id="input-search" placeholder="查找树节点..." value="">
            </div>
            <!-- </form> -->
            <div id="treeview-searchable" class=""></div>
        </div>

        <div class="search col-sm-8">
            <div class="row">
                <div class="col-sm-9 col-xs-7">
                    <input type="text" v-model="inputKey" placeholder="输入关键字进行查询" class="form-control input-search-key" />
                </div>
                <div class="col-sm-3 col-xs-5">
                    <input type="button" href="javascript:;" class="btn btn-primary" value="查找" v-on:click="search" />
                    <input type="button" href="javascript:;" class="btn btn-primary" value="添加" v-on:click="nodeAdd" />
                </div>
            </div>

            <div class="row" style="margin-top:15px;">
                <div v-if="noData" class="text-center">未能获取到任何结果</div>
                <table v-if="!noData" class="table table-striped table-bordered table-hover">
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>名称</th>
                            <th>描述</th>
                            <th>操作</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr v-for="item in items">
                            <td>{{item.id}}</td>
                            <td>{{item.name}}</td>
                            <td>{{item.description}}</td>
                            <td>
                                <a href="javascript:;" class="btn btn-primary" v-on:click="nodeEdit(item)">编辑</a>
                                <a href="javascript:;" class="btn btn-danger" v-on:click="nodeDelete(item)">删除</a>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>

        </div>


    </div>

    <div class="modal fade" id="editor" role="dialog" aria-labelledby="editor-title">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title" id="editor-title">管理缓存项</h4>
                </div>
                <div class="modal-body">
                    <div class="form-group">
                        <span>App:{{appName}}</span>
                    </div>
                    <div class="form-group">
                        <label>节点名称:</label>
                        <input type="text" class="form-control" v-model="nodeName" />
                    </div>
                    <div class="form-group">
                        <label>描述:</label>
                        <input type="text" class="form-control" v-model="nodeDescription" />
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">取消</button>
                    <button type="button" class="btn btn-primary" v-on:click="nodeSave" >保存</button>
                </div>
            </div>
        </div>
    </div>

</div>



@section Scripts
    {
    <script src="~/lib/bootstrap-treeview-1.2.0/bootstrap-treeview.min.js"></script>
    <script type="text/javascript">
        var vm =new Vue({
            el: "#content",
            data: {
                inputKey: "",
                appId: 0,
                appName:"",
                items: [],
                nodeId: 0,
                nodeName: "",
                nodeDescription:"",
                noData: true,
            },
            methods: {
                search: function () {
                    var vm = this;
                    vm.noData = false;
                    $.get("@Url.Action("Search")", { "key": this.inputKey, "appId": this.appId }, function (data) {
                         console.log("search querey succeed!");
                         if (typeof data === 'string')
                         {
                            data = $.parseJSON(data);
                         }
                         if (data.length == 0) {
                             vm.noData = true;
                         }
                         vm.items = data;
                     }).error(function () {
                         vm.noData = true;
                        console.log("网络或服务器错误");
                    });
                },
                nodeAdd: function ()
                {
                    if (this.appId == 0) {
                        alert("请选择App");
                        return;
                    }
                    this.nodeId = 0;
                    this.nodeName = "";
                    this.nodeDescription = "";
                    $("#editor").modal('show');
                },
                nodeEdit: function (item)
                {
                    if (this.appId == 0) {
                        alert("请选择App");
                        return;
                    }
                    this.nodeId = item.id;
                    this.nodeName = item.name;
                    this.nodeDescription = item.description;
                    $("#editor").modal('show');
                },
                nodeDelete: function (item)
                {
                    this.nodeId = item.id;
                    if (confirm("确定要删除吗?"))
                    {
                        $.post("@Url.Action("Delete")", { "id": this.nodeId }, function (data) {
                            if (data.ok) {
                                vm.search();
                            } else {
                               alert(data.msg);
                            }
                        });

                    }
                },
                nodeSave: function ()
                {
                    $.post("@Url.Action("Save")",
                        {
                            "id": this.nodeId,
                            "name": this.nodeName,
                            "description": this.nodeDescription,
                            "appId": this.appId
                        }, function (data) {
                            console.log(data);
                            if (data.ok) {
                                $("#editor").modal("hide");
                                vm.search();
                            } else { 
                                alert(data.msg);
                            }
                        });

                }
            }
        });
        vm.search();


        (function ($) {
            var apps = null;
            function initApps(datas)
            {
                apps = [];
                appIds = [];
                $.each(datas, function (index, app) {
                    apps.push({
                        text: app.name,
                        nodes: [],
                        id: app.id,
                        type: 'app'
                    });
                });
            }

            var $searchableTree = null;
            $.get("@Url.Action("All","AppInfo")", function (datas) {
                initApps(datas);
                initTreeView(apps);
            }).error(function () {
                 initTreeView([]);
             });

            function initTreeView(apps)
            {
                $searchableTree = $('#treeview-searchable').treeview({
                    data: apps,
                    onNodeSelected: function (event, data)
                    {
                        console.log(data);
                        if (data.type == "app")
                        {
                            vm.appId = data.id;
                            vm.appName = data.text;
                            vm.search();
                        }
                    }
                });
            }

            var search = function (e) {
                var pattern = $('#input-search').val();
                var options = {
                    ignoreCase: $('#chk-ignore-case').is(':checked'),
                    exactMatch: $('#chk-exact-match').is(':checked'),
                    revealResults: $('#chk-reveal-results').is(':checked')
                };
                $searchableTree.treeview('search', [pattern, options]);
            }

            $('#input-search').on('keyup', search);
        }(jQuery));



    </script>
}
